webpackJsonp_name_([35],{3:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var o=n(1),u=a(o),s=n(5),i=function(e){function t(){return l(this,t),r(this,e.apply(this,arguments))}return c(t,e),t.prototype.componentDidMount=function(){window.prettyPrint(null,(0,s.findDOMNode)(this.code))},t.prototype.render=function(){var e=this.props.children.split("\n").filter(function(e){return e.length>0}),t=e[0]?/^(\s*)/.exec(e[0])[1].length:0,n=new RegExp("^(\\s{"+t+"})");return e=e.map(function(e){return e.replace(n,"")}),u.default.createElement("div",{className:"code"},u.default.createElement("pre",{className:"prettyprint"},e.join("\n")))},t}(o.Component);i.propTypes={children:o.PropTypes.string},i.defaultProps={children:""},t.default=i},4:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var l=n(1),r=a(l),c=n(2),o=a(c),u=function(e){return r.default.createElement("div",{className:(0,o.default)("docs-example",e.className)},e.children)};u.propTypes={children:l.PropTypes.any,className:l.PropTypes.string},e.exports=u},135:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var o=n(1),u=a(o),s=n(3),i=a(s),d=n(4),f=a(d),p=n(9),m=n(10),h=n(24),y=a(h);e.exports=function(e){function t(n){l(this,t);var a=r(this,e.call(this,n));return a.state={maxLevel:4},a}return c(t,e),t.prototype.render=function(){var e=this;return u.default.createElement("div",null,u.default.createElement("div",{className:"header"},u.default.createElement("h1",null,"Cascade")),u.default.createElement("div",{className:"content button-docs"},u.default.createElement(m.En,null,u.default.createElement(i.default,null,'<Cascade\n  data={array}          // same as Tree\n  fetch={object}\n  halfSelect={bool}     // if halfSelect is true, click parent node will trigger onChange\n  maxLevel={integer}    // \n  value={array}\n  optionTpl={string}    // option template, default is "{text}"\n  resultTpl={string}    // result template, default is same as optionTpl\n  valueTpl={string}     // value template, default is "{value}"\n  onChange={func(array)}\n>\n{ReactElement}\n</Cascade>')),u.default.createElement(m.Cn,null,u.default.createElement(i.default,null,"<Cascade\n  data={array}          // 格式和tree相同\n  fetch={object}\n  lazyFetch={promise}\n  halfSelect={bool}     // 如果halfSelect为true，点击父节点也会触发onChange事件\n  maxLevel={integer}    // 最多展示多少级选项\n  value={array}\n  optionTpl={string}    // 选项模板，默认为 {text}\n  resultTpl={string}    // 选中项显示模板，如果不填使用 optionTpl\n  valueTpl={string}     // 返回值模板，默认为 {value}\n  onChange={func(array)}\n>\n{ReactElement}\n</Cascade>")),u.default.createElement("h2",{className:"subhead"},"Example"),u.default.createElement(f.default,null,u.default.createElement(p.Cascade,{fetch:"json/tree.json",value:["1","1.2","1.2.1"]})),u.default.createElement(i.default,null,"            <Cascade fetch={'json/tree.json'} value={['1', '1.2', '1.2.1']} />"),u.default.createElement("h2",{className:"subhead"},"halfSelect"),u.default.createElement(f.default,null,u.default.createElement(p.Cascade,{fetch:"json/tree.json",halfSelect:!0})),u.default.createElement(i.default,null,"            <Cascade fetch={'json/tree.json'} halfSelect />"),u.default.createElement("h2",{className:"subhead"},"City"),u.default.createElement(f.default,null,u.default.createElement(p.Cascade,{grid:.5,fetch:{url:"json/districts-city.json",then:function(e){return e.districts}},valueTpl:"{adcode}",optionTpl:"{name}"})),u.default.createElement(i.default,null,'            <Cascade grid={1 / 2}\n              fetch={{\n                url: \'json/districts-city.json\',\n                then: (res) => res.districts\n              }}\n              valueTpl="{adcode}"\n              optionTpl="{name}"\n            />'),u.default.createElement("h2",{className:"subhead"},"Lazy Fetch"),u.default.createElement(m.Cn,null,"延迟获取数据，一次获取一个级别列表"),u.default.createElement(f.default,null,"maxLevel: ",u.default.createElement(p.Select,{data:[2,3,4],value:this.state.maxLevel,onChange:function(t){return e.setState({maxLevel:t})}}),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement(p.InputGroup,{grid:.5},u.default.createElement(p.Icon,{icon:"pin"}),u.default.createElement(p.Cascade,{maxLevel:parseInt(this.state.maxLevel),value:["江苏省","南京市","鼓楼区","三牌楼"],lazyFetch:function(e){return y.default.jsonp("//restapi.amap.com/v3/config/district",{subdistrict:1,key:"be32611e40d4b1589a4facd7dfb0e37a",keywords:e?e.adcode:void 0},{cache:600}).then(function(e){return"1"===e.status?e.districts[0].districts:void alert("fetch data error")})},valueTpl:"{name}",optionTpl:"{name}"}))),u.default.createElement(i.default,null,"            maxLevel: <Select data={[2, 3, 4]} value={this.state.maxLevel}\n              onChange={(maxLevel) => this.setState({ maxLevel })} />\n\n            <br /><br />\n\n            <InputGroup grid={1 / 2}>\n              <Icon icon=\"pin\" />\n              <Cascade\n                maxLevel={parseInt(this.state.maxLevel)}\n                value={['江苏省', '南京市', '鼓楼区', '三牌楼']}\n                lazyFetch={(d) => {\n                  return Refetch.jsonp('//restapi.amap.com/v3/config/district', {\n                    subdistrict: 1,\n                    key: 'be32611e40d4b1589a4facd7dfb0e37a',\n                    keywords: d ? d.adcode : undefined\n                  }, { cache: 600 }).then(res => {\n                    if (res.status === '1') {\n                      return res.districts[0].districts\n                    } else {\n                      alert('fetch data error')\n                    }\n                  })\n                }}\n                valueTpl=\"{name}\"\n                optionTpl=\"{name}\"\n              />\n            </InputGroup>")))},t}(o.Component)}});