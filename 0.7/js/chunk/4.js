webpackJsonp_name_([4],{3:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var o=n(1),c=a(o),d=n(5),i=function(e){function t(){return l(this,t),u(this,e.apply(this,arguments))}return r(t,e),t.prototype.componentDidMount=function(){window.prettyPrint(null,(0,d.findDOMNode)(this.code))},t.prototype.render=function(){var e=this.props.children.split("\n").filter(function(e){return e.length>0}),t=e[0]?/^(\s*)/.exec(e[0])[1].length:0,n=new RegExp("^(\\s{"+t+"})");return e=e.map(function(e){return e.replace(n,"")}),c.default.createElement("div",{className:"code"},c.default.createElement("pre",{className:"prettyprint"},e.join("\n")))},t}(o.Component);i.propTypes={children:o.PropTypes.string},i.defaultProps={children:""},t.default=i},4:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var l=n(1),u=a(l),r=n(2),o=a(r),c=function(e){return u.default.createElement("div",{className:(0,o.default)("docs-example",e.className)},e.children)};c.propTypes={children:l.PropTypes.any,className:l.PropTypes.string},e.exports=c},35:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var l=n(1),u=a(l),r=n(3),o=a(r),c=n(10);e.exports={TplDataDesc:function(){return u.default.createElement("div",null,u.default.createElement(c.Cn,null,u.default.createElement("h2",{className:"subhead"},"数据结构"),u.default.createElement("div",null,"标准结构为 ",u.default.createElement("em",null,"text"),", ",u.default.createElement("em",null,"id")," key组成的数组。"),u.default.createElement(o.default,null,'[{"text":"北京","id":"beijing"},{"text":"上海", "id":"shanghai"}]'),u.default.createElement("div",null,"可以使用自定义数组，指定 ",u.default.createElement("em",null,"textTpl"),", ",u.default.createElement("em",null,"valueTpl"),u.default.createElement("br",null),u.default.createElement(o.default,null,'[{"cn":"北京","en":"beijing"},{"cn":"上海", "en":"shanghai"}]'),u.default.createElement("ul",null,u.default.createElement("li",null,"tpl为string时，会用data替换'{}'内的key值。",u.default.createElement("br",null),"例: '{cn}-{en}' => 北京-beijing"),u.default.createElement("li",null,"tpl为function时，会使用这个function的返回值，参数为data。",u.default.createElement("br",null),"例: function (d) { return <span><b>{d.cn}</b> / {d.en}<span>; } => ",u.default.createElement("b",null,"北京")," / beijing"))),u.default.createElement("div",null,"可以使用一维数组，这种情况下，显示文字与值相同"),u.default.createElement(o.default,null,'["北京","上海","广州"]')),u.default.createElement(c.En,null,u.default.createElement("h2",{className:"subhead"},"Data Structure"),u.default.createElement("div",null,"- default structure is an array composed by objects with ",u.default.createElement("em",null,"text"),", ",u.default.createElement("em",null,"id")," key"),u.default.createElement(o.default,null,'[{"text":"United States", "id":"us"},{"text":"China", "id":"cn"}]'),u.default.createElement("div",null,"- If data has not id or text, use ",u.default.createElement("em",null,"textTpl"),", ",u.default.createElement("em",null,"valueTpl")," format data",u.default.createElement("br",null),u.default.createElement(o.default,null,'[{"name":"United States", "code":"us"},{"name":"China", "code":"cn"}]'),u.default.createElement("ul",null,u.default.createElement("li",null,"if tpl is string，use object[key] substitute '{key}'",u.default.createElement("br",null),"example: '{name}-{code}' => China-cn"),u.default.createElement("li",null,"if tpl is function, use function(object)",u.default.createElement("br",null),"example: function (d) { return <span><b>{d.name}</b> / {d.code}<span>; } => ",u.default.createElement("b",null,"China")," / cn"))),u.default.createElement("div",null,"- You can use a linear array. Value and text will be the same."),u.default.createElement(o.default,null,'["China","United States","France"]')))}}},54:function(e,t){"use strict";function n(e){for(var t=[];e--;)t.push(e.toString());return t}function a(e){for(var t={};e--;)t[e.toString()]="item "+e;return t}function l(e){for(var t=[];e--;)t.push({key:e,value:"item-"+e});return t}t.__esModule=!0,t.createArray=n,t.createKeyValue=a,t.createObjectArray=l},137:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var o=n(1),c=a(o),d=n(3),i=a(d),f=n(4),s=a(f),m=n(35),p=n(10),h=n(9),E=n(54),b=(0,E.createKeyValue)(1e3);e.exports=function(e){function t(){return l(this,t),u(this,e.apply(this,arguments))}return r(t,e),t.prototype.render=function(){return c.default.createElement("div",null,c.default.createElement("div",{className:"header"},c.default.createElement("h1",null,"Checkbox Group"),c.default.createElement(p.Cn,{tag:"h2"},"复选框组")),c.default.createElement("div",{className:"content"},c.default.createElement(p.Cn,null,c.default.createElement(i.default,null,'<CheckboxGroup\n    block={bool}            // 为 true 时，各选项单行排列。默认为 false \n    className={string}\n    data={array|object}     // 数据，默认值为[]\n    fetch={object}\n    inline={bool}           // 旧接口，和block相反，建议使用block，设置了block时，inline无效\n    onChange={function(     // 当选项改变时回调方法\n      value                 // typeof sep === \'string\' ? array.join(sep) : [array]\n    )}\n    readOnly={bool}         // 为 true 时，只读。默认为 false\n    sep={string|null}       // 返回值分隔字符，默认值为 ","。为 "" 或 null 时，返回值类型为 array\n    textTpl={string|func}   // 显示文字模板，字符串或方法，默认为 "{text}"\n    value={string|array}\n    valueTpl={string|func}  // 返回数据模板，字符串或方法，默认为 "{id}"\n  />')),c.default.createElement(p.En,null,c.default.createElement(i.default,null,"<CheckboxGroup\n    block={bool}            // default is false\n    className={string}\n    data={array|object}     // default is []\n    fetch={object}\n    onChange={function(     // change callback\n      value                 // typeof sep === 'string' ? array.join(sep) : [array]\n    )}\n    readOnly={bool}         // default is false\n    sep={string|null}       // default is ','\n    textTpl={string|func}   // text template, default is  \"{text}\"\n    value={string|array}\n    valueTpl={string|func}  // value template, default is \"{id}\"\n  />")),c.default.createElement("p",null,c.default.createElement("a",{href:"#/fetch"},"fetch see here")),c.default.createElement(m.TplDataDesc,null),c.default.createElement("h2",{className:"subhead"},"Array Data"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{value:"us,fr",data:[{id:"cn",text:"China"},{id:"us",text:"United States"},{id:"jp",text:"Japan"},{id:"gb",text:"Great Britain"},{id:"fr",text:"France"},{id:"de",text:"Germany"},{id:"es",text:"Spain"}]})),c.default.createElement(i.default,null,"<CheckboxGroup value=\"us,fr\" data={[\n  { 'id': 'cn', 'text': 'China' },\n  { 'id': 'us', 'text': 'United States' },\n  { 'id': 'jp', 'text': 'Japan' },\n  { 'id': 'gb', 'text': 'Great Britain' },\n  { 'id': 'fr', 'text': 'France' },\n  { 'id': 'de', 'text': 'Germany' },\n  { 'id': 'es', 'text': 'Spain' }\n]} />"),c.default.createElement("h2",{className:"subhead"},"Object Data"),c.default.createElement(p.Cn,null,"0.6 后可以使用key value结构的object作为数据"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{value:"gb",data:{cn:"China",us:"United States",jp:"Japan",gb:"Great Britain",fr:"France",de:"Germany",es:"Spain"}})),c.default.createElement(i.default,null,"<CheckboxGroup value=\"gb\" data={{\n  'cn': 'China',\n  'us': 'United States',\n  'jp': 'Japan',\n  'gb': 'Great Britain',\n  'fr': 'France',\n  'de': 'Germany',\n  'es': 'Spain'\n}} />"),c.default.createElement("h2",{className:"subhead"},"String Template"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{value:"us",textTpl:"{name}({code})",valueTpl:"{code}",data:[{code:"cn",name:"China"},{code:"us",name:"United States"},{code:"jp",name:"Japan"},{code:"gb",name:"Great Britain"},{code:"fr",name:"France"},{code:"de",name:"Germany"},{code:"es",name:"Spain"}]})),c.default.createElement(i.default,null,"<CheckboxGroup\n  value=\"us\"\n  textTpl=\"{name}({code})\"\n  valueTpl=\"{code}\"\n  data={[\n    { 'code': 'cn', 'name': 'China' },\n    { 'code': 'us', 'name': 'United States' },\n    { 'code': 'jp', 'name': 'Japan' },\n    { 'code': 'gb', 'name': 'Great Britain' },\n    { 'code': 'fr', 'name': 'France' },\n    { 'code': 'de', 'name': 'Germany' },\n    { 'code': 'es', 'name': 'Spain' }\n  ]}\n/>"),c.default.createElement("h2",{className:"subhead"},"Function Template"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{value:"us",textTpl:function(e){return e.name+"-"+e.code},valueTpl:function(e){return e.code},data:[{code:"cn",name:"China"},{code:"us",name:"United States"},{code:"jp",name:"Japan"},{code:"gb",name:"Great Britain"},{code:"fr",name:"France"},{code:"de",name:"Germany"},{code:"es",name:"Spain"}]})),c.default.createElement(i.default,null,"<CheckboxGroup\n  value=\"us\"\n  textTpl={(d) => d.name + '-' + d.code }\n  valueTpl={(d) => d.code}\n  data={[\n    { 'code': 'cn', 'name': 'China' },\n    { 'code': 'us', 'name': 'United States' },\n    { 'code': 'jp', 'name': 'Japan' },\n    { 'code': 'gb', 'name': 'Great Britain' },\n    { 'code': 'fr', 'name': 'France' },\n    { 'code': 'de', 'name': 'Germany' },\n    { 'code': 'es', 'name': 'Spain' }\n  ]}\n/>"),c.default.createElement("h2",{className:"subhead"},"Array[string]"),c.default.createElement(p.Cn,null,"显示文本和选中值一样时，可以使用简单数组"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{sep:"",onChange:function(e){return console.log(e)},value:["Beijing","Edinburgh"],data:["Beijing","Tokyo","New York","HongKong","Edinburgh","San Francisco","London","Sidney"]})),c.default.createElement(i.default,null,"<CheckboxGroup sep=\"\"\n  onChange={(value) => console.log(value)}\n  value={['Beijing', 'Edinburgh']}\n  data={['Beijing', 'Tokyo', 'New York', 'HongKong', 'Edinburgh',\n    'San Francisco', 'London', 'Sidney']}\n/>"),c.default.createElement("h2",{className:"subhead"},"Remote Data"),c.default.createElement(p.Cn,null,"支持",c.default.createElement("a",{href:"#/fetch"},"fetch"),"从服务端获取数据"),c.default.createElement(p.En,null,"Get data from server with ",c.default.createElement("a",{href:"#/fetch"},"fetch")),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{onChange:function(e){return console.log(e)},value:"us,fr",fetch:{url:"json/text-value.json",cache:3600}})),c.default.createElement(i.default,null,"<CheckboxGroup\n  onChange={(value) => console.log(value)}\n  value=\"us,fr\"\n  fetch={{url: 'json/text-value.json', cache: 3600}}\n/>"),c.default.createElement("h2",{className:"subhead"},"Block"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{block:!0,onChange:function(e){return console.log(e)},value:"us,fr",fetch:{url:"json/text-value.json",cache:3600}})),c.default.createElement(i.default,null,"<CheckboxGroup block\n  onChange={(value) => console.log(value)}\n  value=\"us,fr\"\n  fetch={{url: 'json/text-value.json', cache: 3600}}\n/>"),c.default.createElement("h2",{className:"subhead"},"Data Separator"),c.default.createElement(p.Cn,null,"使用自定义数据分隔符代替','号"),c.default.createElement(p.En,null,"use '|' instead of ','"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{onChange:function(e){return console.log(e)},sep:"|",value:"us|fr",fetch:{url:"json/text-value.json",cache:3600}})),c.default.createElement(i.default,null,'<CheckboxGroup\n  onChange={(value) => console.log(value)}\n  sep="|"\n  value="us|fr"\n  fetch={{url: \'json/text-value.json\', cache: 3600}}\n/>'),c.default.createElement("h2",{className:"subhead"},"ReadOnly"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{readOnly:!0,value:["Beijing","Edinburgh"],data:["Beijing","Tokyo","New York","HongKong","Edinburgh","San Francisco","London","Sidney"]})),c.default.createElement(i.default,null,"<CheckboxGroup readOnly\n  value={['Beijing', 'Edinburgh']}\n  data={['Beijing', 'Tokyo', 'New York', 'HongKong', 'Edinburgh',\n    'San Francisco', 'London', 'Sidney']}\n/>"),c.default.createElement("h2",{className:"subhead"},"Data && Children"),c.default.createElement(p.Cn,null,"0.6 支持数据和Checkbox元素混合传入，position为插入位置，正整数"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{sep:null,onChange:function(e){return console.log(e)},value:["Beijing","Edinburgh"],data:["Beijing","Tokyo","New York","Edinburgh","San Francisco","Sidney"]},c.default.createElement(h.Checkbox,{position:3,value:"Hongkong"},c.default.createElement(h.Icon,{icon:"cloud-outline"}),"Hongkong"),c.default.createElement(h.Checkbox,{value:"London"},"London"))),c.default.createElement(i.default,null,"<CheckboxGroup sep={null}\n  onChange={(value) => console.log(value)}\n  value={['Beijing', 'Edinburgh']}\n  data={['Beijing', 'Tokyo', 'New York', 'Edinburgh', 'San Francisco', 'Sidney']}\n  >\n  <Checkbox position={3} value=\"Hongkong\"><Icon icon=\"cloud-outline\" />Hongkong</Checkbox>\n  <Checkbox value=\"London\">London</Checkbox>\n</CheckboxGroup>"),c.default.createElement("h2",{className:"subhead"},"1000 radios"),c.default.createElement(s.default,null,c.default.createElement(h.CheckboxGroup,{data:b})),c.default.createElement(i.default,null,"<CheckboxGroup data={data1000} />")))},t}(c.default.Component)}});