webpackJsonp_name_([5],{3:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var c=n(1),i=l(c),d=n(5),o=function(e){function t(){return a(this,t),r(this,e.apply(this,arguments))}return u(t,e),t.prototype.componentDidMount=function(){window.prettyPrint(null,(0,d.findDOMNode)(this.code))},t.prototype.render=function(){var e=this.props.children.split("\n").filter(function(e){return e.length>0}),t=e[0]?/^(\s*)/.exec(e[0])[1].length:0,n=new RegExp("^(\\s{"+t+"})");return e=e.map(function(e){return e.replace(n,"")}),i.default.createElement("div",{className:"code"},i.default.createElement("pre",{className:"prettyprint"},e.join("\n")))},t}(c.Component);o.propTypes={children:c.PropTypes.string},o.defaultProps={children:""},t.default=o},4:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}var a=n(1),r=l(a),u=n(2),c=l(u),i=function(e){return r.default.createElement("div",{className:(0,c.default)("docs-example",e.className)},e.children)};i.propTypes={children:a.PropTypes.any,className:a.PropTypes.string},e.exports=i},35:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}var a=n(1),r=l(a),u=n(3),c=l(u),i=n(10);e.exports={TplDataDesc:function(){return r.default.createElement("div",null,r.default.createElement(i.Cn,null,r.default.createElement("h2",{className:"subhead"},"数据结构"),r.default.createElement("div",null,"标准结构为 ",r.default.createElement("em",null,"text"),", ",r.default.createElement("em",null,"id")," key组成的数组。"),r.default.createElement(c.default,null,'[{"text":"北京","id":"beijing"},{"text":"上海", "id":"shanghai"}]'),r.default.createElement("div",null,"可以使用自定义数组，指定 ",r.default.createElement("em",null,"textTpl"),", ",r.default.createElement("em",null,"valueTpl"),r.default.createElement("br",null),r.default.createElement(c.default,null,'[{"cn":"北京","en":"beijing"},{"cn":"上海", "en":"shanghai"}]'),r.default.createElement("ul",null,r.default.createElement("li",null,"tpl为string时，会用data替换'{}'内的key值。",r.default.createElement("br",null),"例: '{cn}-{en}' => 北京-beijing"),r.default.createElement("li",null,"tpl为function时，会使用这个function的返回值，参数为data。",r.default.createElement("br",null),"例: function (d) { return <span><b>{d.cn}</b> / {d.en}<span>; } => ",r.default.createElement("b",null,"北京")," / beijing"))),r.default.createElement("div",null,"可以使用一维数组，这种情况下，显示文字与值相同"),r.default.createElement(c.default,null,'["北京","上海","广州"]')),r.default.createElement(i.En,null,r.default.createElement("h2",{className:"subhead"},"Data Structure"),r.default.createElement("div",null,"- default structure is an array composed by objects with ",r.default.createElement("em",null,"text"),", ",r.default.createElement("em",null,"id")," key"),r.default.createElement(c.default,null,'[{"text":"United States", "id":"us"},{"text":"China", "id":"cn"}]'),r.default.createElement("div",null,"- If data has not id or text, use ",r.default.createElement("em",null,"textTpl"),", ",r.default.createElement("em",null,"valueTpl")," format data",r.default.createElement("br",null),r.default.createElement(c.default,null,'[{"name":"United States", "code":"us"},{"name":"China", "code":"cn"}]'),r.default.createElement("ul",null,r.default.createElement("li",null,"if tpl is string，use object[key] substitute '{key}'",r.default.createElement("br",null),"example: '{name}-{code}' => China-cn"),r.default.createElement("li",null,"if tpl is function, use function(object)",r.default.createElement("br",null),"example: function (d) { return <span><b>{d.name}</b> / {d.code}<span>; } => ",r.default.createElement("b",null,"China")," / cn"))),r.default.createElement("div",null,"- You can use a linear array. Value and text will be the same."),r.default.createElement(c.default,null,'["China","United States","France"]')))}}},163:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function c(e){return d.default.createElement("span",null,d.default.createElement("img",{src:"//lobos.github.io/react-ui/images/flags/"+e.code+".png"})," ",e.en)}for(var i=n(1),d=l(i),o=n(3),s=l(o),f=n(4),p=l(f),m=n(35),h=n(9),E=n(10),g=[],y=1e3;y--;)g.push(y);e.exports=function(e){function t(n){a(this,t);var l=r(this,e.call(this,n));return l.state={country:""},l.handleCountry=l.handleCountry.bind(l),l}return u(t,e),t.prototype.handleCountry=function(e){this.setState({courtry:e})},t.prototype.render=function(){var e=this;return d.default.createElement("div",null,d.default.createElement("div",{className:"header"},d.default.createElement("h1",null,"Select"),d.default.createElement(E.Cn,{tag:"h2"},"下拉列表")),d.default.createElement("div",{className:"content"},d.default.createElement(E.Cn,null,d.default.createElement(s.default,null,'<Select\n  className={string}    // class\n  data={array|object}   // 数据\n  fetch={object}\n  grid={{width, offset, responsive}} // 宽度，详见Grid\n  sep={string|null}     // 返回值分隔字符，默认值为 ","。为 "" 或 null 时，返回值类型为 array\n  filterAble={bool}     // 是否显示筛选，默认为 false\n  readOnly={bool}       // 是否只读。默认为 false\n  groupBy={string}      // 分组的 key。不填为不分组\n  placeholder={string}  // 占位提示文字\n  maxShowCount={number} // 同时最多显示选项数。默认值为30\n  mult={bool}           // 是否多选，默认为 false\n  onChange={function}   // 值改变时触发事，参数为 value\n  optionTpl={string}    // 选项模板，默认为 {text}\n  resultTpl={string}    // 选中项显示模板，如果不填使用 optionTpl\n  valueTpl={string}     // 返回值模板，默认为 {value}\n  value={string}        // 初始值\n/>\n模板使用 "{key}" 形式的字符串进行格式化。\ndata 为简单数组(如["中国", "美国", "俄罗斯", "德国"])，时，所有模板无效。\n')),d.default.createElement(E.En,null,d.default.createElement(s.default,null,'<Select\n  className={string}    // class\n  data={array|object}\n  fetch={object}\n  grid={{width, offset, responsive}} // see Grid\n  sep={string|null}     // default is \',\'\n  filterAble={bool}     // default is false\n  readOnly={bool}       // default is false\n  groupBy={string}      // data key\n  placeholder={string}\n  maxShowCount={number} // max render count, use for large data, default is 30\n  mult={bool}           // default is false\n  onChange={function(value)}\n  optionTpl={string}    // option template, default is "{text}"\n  resultTpl={string}    // result template, default is same as optionTpl\n  valueTpl={string}     // value template, default is "{value}"\n  value={string}        // 初始值\n/>')),d.default.createElement("p",null,d.default.createElement("a",{href:"#/fetch"},"fetch see here")),d.default.createElement(E.Cn,null,"0.7 加入了lazy render的机制，一个Select最多同时render maxShowCount个选项，提升大数据下的性能。"),d.default.createElement(m.TplDataDesc,null),d.default.createElement("h2",{className:"subhead"},"Simple Array"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:1/3},placeholder:"no data",data:[]}),d.default.createElement(h.Select,{grid:{width:1/3},placeholder:"City",data:["Beijing","Tokyo","New York","Edinburgh","San Francisco","Sidney"]}),d.default.createElement(h.Select,{grid:{width:1/3},mult:!0,data:["Beijing","Tokyo","New York","Edinburgh","San Francisco","Sidney"]})),d.default.createElement(s.default,null,"<Select grid={{width: 1 / 3}}\n  placeholder=\"no data\"\n  data={[]} />\n<Select grid={{width: 1 / 3}}\n  placeholder=\"City\"\n  data={['Beijing', 'Tokyo', 'New York', 'Edinburgh', 'San Francisco', 'Sidney']} />\n<Select grid={{width: 1 / 3}}\n  mult\n  data={['Beijing', 'Tokyo', 'New York', 'Edinburgh', 'San Francisco', 'Sidney']} />"),d.default.createElement("h2",{className:"subhead"},"Object"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:.25},placeholder:"Key Value",value:"us",data:{cn:"China",us:"United States",jp:"Japan",gb:"Great Britain",fr:"France",de:"Germany",es:"Spain"}})),d.default.createElement(s.default,null,"<Select grid={{width: 1 / 4}}\n  placeholder=\"Key Value\"\n  value=\"us\"\n  data={{\n    'cn': 'China',\n    'us': 'United States',\n    'jp': 'Japan',\n    'gb': 'Great Britain',\n    'fr': 'France',\n    'de': 'Germany',\n    'es': 'Spain'\n  }} />"),d.default.createElement("h2",{className:"subhead"},"Single Select"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:.5},placeholder:"Single Select",filterAble:!0,optionTpl:c,valueTpl:"{en}",onChange:this.handleCountry,value:this.state.country,fetch:"json/countries.json"}),d.default.createElement(h.Button,{style:{marginLeft:10},onClick:function(){return e.setState({country:""})}},"Clear")),d.default.createElement(s.default,null,'<Select grid={{width: 1 / 2}}\n  placeholder="Single Select"\n  filterAble\n  optionTpl={imageTpl}\n  valueTpl="{en}"\n  onChange={ this.handleCountry }\n  value={this.state.country}\n  fetch={"json/countries.json"} />\n<Button style={{ marginLeft: 10 }} onClick={ () => this.setState({ country: \'\' }) }>Clear</Button>'),d.default.createElement("h2",{className:"subhead"},"Large Options"),d.default.createElement(E.Cn,null,"这个示例设置了1000个选项。"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:1/3},filterAble:!0,placeholder:"single",data:g})," ",d.default.createElement(h.Select,{grid:{width:1/3},filterAble:!0,placeholder:"mult",mult:!0,data:g})),d.default.createElement(s.default,null,'<Select grid={{width: 1 / 3}}\n  filterAble\n  placeholder="single"\n  data={bigData} />\n&nbsp;\n<Select grid={{width: 1 / 3}}\n  filterAble\n  placeholder="mult"\n  mult\n  data={bigData} />'),d.default.createElement("h2",{className:"subhead"},"Mult Select"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:.5},mult:!0,filterAble:!0,optionTpl:c,resultTpl:"{en}",valueTpl:"{en}",fetch:{url:"json/countries.json",cache:3600}})),d.default.createElement(s.default,null,'<Select grid={{width: 1 / 2}}\n  mult\n  filterAble\n  optionTpl={imageTpl}\n  resultTpl="{en}"\n  valueTpl="{en}"\n  fetch={{url: \'json/countries.json\', cache: 3600}} />'),d.default.createElement("h2",{className:"subhead"},"groupBy"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:.5},placeholder:"Group by continent",groupBy:"continent",filterAble:!0,optionTpl:c,valueTpl:"{country}-{en}",fetch:{url:"json/countries.json",cache:!0}})),d.default.createElement(s.default,null,'<Select grid={{width: 1 / 2}}\n  placeholder="Group by continent"\n  groupBy="continent"\n  filterAble\n  optionTpl={imageTpl}\n  valueTpl="{country}-{en}"\n  fetch={{url: \'json/countries.json\', cache: true}} />'),d.default.createElement("h2",{className:"subhead"},"readOnly"),d.default.createElement(p.default,null,d.default.createElement(h.Select,{grid:{width:1/3},readOnly:!0,value:"New York",data:["Beijing","Tokyo","New York","Edinburgh","San Francisco","Sidney"]})),d.default.createElement(s.default,null,"<Select grid={{width: 1 / 3}} readOnly\n  value=\"New York\"\n  data={['Beijing', 'Tokyo', 'New York', 'Edinburgh', 'San Francisco', 'Sidney']} />")))},t}(i.Component)}});