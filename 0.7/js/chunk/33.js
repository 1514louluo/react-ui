webpackJsonp_name_([33],{3:function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=a(1),s=n(i),c=a(5),o=function(e){function t(){return l(this,t),r(this,e.apply(this,arguments))}return u(t,e),t.prototype.componentDidMount=function(){window.prettyPrint(null,(0,c.findDOMNode)(this.code))},t.prototype.render=function(){var e=this.props.children.split("\n").filter(function(e){return e.length>0}),t=e[0]?/^(\s*)/.exec(e[0])[1].length:0,a=new RegExp("^(\\s{"+t+"})");return e=e.map(function(e){return e.replace(a,"")}),s.default.createElement("div",{className:"code"},s.default.createElement("pre",{className:"prettyprint"},e.join("\n")))},t}(i.Component);o.propTypes={children:i.PropTypes.string},o.defaultProps={children:""},t.default=o},4:function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var l=a(1),r=n(l),u=a(2),i=n(u),s=function(e){return r.default.createElement("div",{className:(0,i.default)("docs-example",e.className)},e.children)};s.propTypes={children:l.PropTypes.any,className:l.PropTypes.string},e.exports=s},138:function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var i=a(1),s=n(i),c=a(3),o=n(c),m=a(4),f=n(m),d=a(10),p=a(9),h=new Date;e.exports=function(e){function t(a){l(this,t);var n=r(this,e.call(this,a));return n.state={min:null,max:null},n}return u(t,e),t.prototype.render=function(){var e=this;return s.default.createElement("div",null,s.default.createElement("div",{className:"header"},s.default.createElement("h1",null,"Datepicker/Datetime"),s.default.createElement(d.Cn,{tag:"h2"},"日期 / 时间 选择器")),s.default.createElement("div",{className:"content"},s.default.createElement(d.Cn,null,s.default.createElement(o.default,null,"<Datepicker\n    readOnly={bool}        // 只读，默认为 false\n    format={string}        // 返回值格式，如 'yyyy-MM-dd'，默认值 在 Lang.date.format 下设置\n    min={string|long|Date} // 最小值，可以为string，unixtimestamp或者Date对象\n    max={string|long|Date} // 最大值，可以为string，unixtimestamp或者Date对象\n    unixtime={bool}        // 为 true 时，onChange 返回 unixtimestamp\n    placeholder={string}   // 占位提示文字\n    onChange={function}    // 值改变时触发事件，参数为 value\n    type={string}          // 可选值为 'datetime|date|time'，默认值为'datetime'\n    value={string|number}  // 初始值\n  />"),s.default.createElement("p",{style:{color:"red"}},'0.6 删除了 dateOnly and timeOnly，使用type="date|time"代替'),s.default.createElement("p",null,"0.6 改名为Datepicker，Datetime暂时可以继续使用")),s.default.createElement(d.En,null,s.default.createElement(o.default,null,"<Datepicker\n    readOnly={bool}        // default is false\n    format={string}        // format pattern, default pattern is 'yyyy-MM-dd', at Lang.date.format\n    min={string|long|Date} // min value, string, unixtimestamp, Date\n    max={string|long|Date} // max value, string, unixtimestamp, Date\n    unixtime={bool}        // if true, onChange return unixtimestamp type value\n    placeholder={string}   // \n    onChange={function(\n      value\n    )}\n    type={string}          // 'datetime|date|time', default is 'datetime'\n    value={string|number}  // init value\n  />")),s.default.createElement("h2",{className:"subhead"},"Example"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{onChange:function(t){return e.setState({normal:t})},value:h}),s.default.createElement("span",null,this.state.normal)),s.default.createElement(o.default,null,"<Datepicker\n  onChange={(value) => this.setState({ normal: value })}\n  value={_now} />\n<span>{this.state.normal}</span>"),s.default.createElement("h2",{className:"subhead"},"date"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{type:"date",onChange:function(t){return e.setState({dateValue:t})},value:h}),s.default.createElement("span",null,this.state.dateValue)),s.default.createElement(o.default,null,'<Datepicker type="date"\n  onChange={(value) => this.setState({ dateValue: value })} \n  value={_now}\n  />\n<span>{this.state.dateValue}</span>'),s.default.createElement("h2",{className:"subhead"},"time"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{type:"time",value:h,onChange:function(t){return e.setState({timeValue:t})}}),s.default.createElement("span",null,this.state.timeValue)),s.default.createElement(o.default,null,'<Datepicker type="time"\n  value={_now}\n  onChange={(value) => this.setState({ timeValue: value })} />\n<span>{this.state.timeValue}</span>'),s.default.createElement("h2",{className:"subhead"},"min & max"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{min:"2016-01-12",max:"2016-02-14 14:23:00"})),s.default.createElement(o.default,null,'<Datepicker min="2016-01-12" max="2016-02-14 14:23:00" />'),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{min:"2016-01-10",onChange:function(t){return e.setState({min:t})},type:"date",max:this.state.max}),"-",s.default.createElement(p.Datepicker,{onChange:function(t){return e.setState({max:t})},type:"date",min:this.state.min})),s.default.createElement(o.default,null,'<Datepicker min="2016-01-10"\n  onChange={(value) => this.setState({ min: value })}\n  type="date"\n  max={this.state.max} />\n-\n<Datepicker onChange={(value) => this.setState({ max: value })}\n  type="date"\n  min={this.state.min} />'),s.default.createElement("h2",{className:"subhead"},"format"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{format:"yyyy/MM/dd hh:mm",onChange:function(t){return e.setState({formatValue:t})},value:h}),s.default.createElement("span",null,this.state.formatValue)),s.default.createElement(o.default,null,'<Datepicker format="yyyy/MM/dd hh:mm"\n  onChange={(value) => this.setState({ formatValue: value })}\n  value={_now} />\n<span>{this.state.formatValue}</span>'),s.default.createElement("h2",{className:"subhead"},"readOnly"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{readOnly:!0,value:"2015-06-21 17:24:03"})),s.default.createElement(o.default,null,'<Datepicker readOnly value="2015-06-21 17:24:03" />'),s.default.createElement("h2",{className:"subhead"},"unixtime"),s.default.createElement(f.default,null,s.default.createElement(p.Datepicker,{unixtime:!0,onChange:function(t){return e.setState({unixtimeValue:t})},value:h}),s.default.createElement("span",null,this.state.unixtimeValue)),s.default.createElement(o.default,null,"<Datepicker unixtime\n  onChange={(value) => this.setState({ unixtimeValue: value })} \n  value={_now}\n  />\n<span>{this.state.unixtimeValue}</span>"),s.default.createElement("h2",{className:"subhead"},"DatepickerRange"),s.default.createElement(d.Cn,null,"增加一个快捷方式，可以成对的使用Datepicker，第一个Datepicker的选中值作为第二个Datepicker的最小值，第二个Datepicker的选中值作为第一个Datepicker的最大值"),s.default.createElement(d.Cn,null,s.default.createElement(o.default,null,"<DatepickerRange\n  name={string}             // 字段名\n  con={string|element}      // 两个控件中间的连接符，默认为 '-'\n  max={string|long|Date}    // 第二个控件的最大值\n  min={string|long|Date}    // 第一个控件的最小值\n  value={array}             // 长度为2的数组\n  {...props}                // 其他同Datepicker\n/>")),s.default.createElement(d.En,null,s.default.createElement(o.default,null,"<DatepickerRange\n  name={string}\n  con={string|element}      // string between two element, default is '-'\n  max={string|long|Date}    // second datepicker max value\n  min={string|long|Date}    // first datepicker min value\n  value={array}             // length 2\n  {...props}                // other props same as Datepicker\n/>")),s.default.createElement(f.default,null,s.default.createElement(p.DatepickerRange,{min:"2016-03-16",max:"2016-08-21",type:"datetime",name:"times",value:["2016-03-20","2016-07-21"]})),s.default.createElement(o.default,null,'<DatepickerRange min="2016-03-16" max="2016-08-21" type="datetime" name="times" value={[\'2016-03-20\', \'2016-07-21\']} />')))},t}(i.Component)}});